{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"D:/web/silly/silly/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"D:/web/silly/silly/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar HTML = require('../common/html'); //Aliases\n\n\nvar $ = HTML.TAG_NAMES;\nvar NS = HTML.NAMESPACES; //Element utils\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\n\nfunction isImpliedEndTagRequired(tn) {\n  switch (tn.length) {\n    case 1:\n      return tn === $.P;\n\n    case 2:\n      return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI;\n\n    case 3:\n      return tn === $.RTC;\n\n    case 6:\n      return tn === $.OPTION;\n\n    case 8:\n      return tn === $.OPTGROUP;\n  }\n\n  return false;\n}\n\nfunction isImpliedEndTagRequiredThoroughly(tn) {\n  switch (tn.length) {\n    case 1:\n      return tn === $.P;\n\n    case 2:\n      return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI || tn === $.TD || tn === $.TH || tn === $.TR;\n\n    case 3:\n      return tn === $.RTC;\n\n    case 5:\n      return tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD;\n\n    case 6:\n      return tn === $.OPTION;\n\n    case 7:\n      return tn === $.CAPTION;\n\n    case 8:\n      return tn === $.OPTGROUP || tn === $.COLGROUP;\n  }\n\n  return false;\n}\n\nfunction isScopingElement(tn, ns) {\n  switch (tn.length) {\n    case 2:\n      if (tn === $.TD || tn === $.TH) {\n        return ns === NS.HTML;\n      } else if (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS) {\n        return ns === NS.MATHML;\n      }\n\n      break;\n\n    case 4:\n      if (tn === $.HTML) {\n        return ns === NS.HTML;\n      } else if (tn === $.DESC) {\n        return ns === NS.SVG;\n      }\n\n      break;\n\n    case 5:\n      if (tn === $.TABLE) {\n        return ns === NS.HTML;\n      } else if (tn === $.MTEXT) {\n        return ns === NS.MATHML;\n      } else if (tn === $.TITLE) {\n        return ns === NS.SVG;\n      }\n\n      break;\n\n    case 6:\n      return (tn === $.APPLET || tn === $.OBJECT) && ns === NS.HTML;\n\n    case 7:\n      return (tn === $.CAPTION || tn === $.MARQUEE) && ns === NS.HTML;\n\n    case 8:\n      return tn === $.TEMPLATE && ns === NS.HTML;\n\n    case 13:\n      return tn === $.FOREIGN_OBJECT && ns === NS.SVG;\n\n    case 14:\n      return tn === $.ANNOTATION_XML && ns === NS.MATHML;\n  }\n\n  return false;\n} //Stack of open elements\n\n\nvar OpenElementStack = /*#__PURE__*/function () {\n  function OpenElementStack(document, treeAdapter) {\n    _classCallCheck(this, OpenElementStack);\n\n    this.stackTop = -1;\n    this.items = [];\n    this.current = document;\n    this.currentTagName = null;\n    this.currentTmplContent = null;\n    this.tmplCount = 0;\n    this.treeAdapter = treeAdapter;\n  } //Index of element\n\n\n  _createClass(OpenElementStack, [{\n    key: \"_indexOf\",\n    value: function _indexOf(element) {\n      var idx = -1;\n\n      for (var i = this.stackTop; i >= 0; i--) {\n        if (this.items[i] === element) {\n          idx = i;\n          break;\n        }\n      }\n\n      return idx;\n    } //Update current element\n\n  }, {\n    key: \"_isInTemplate\",\n    value: function _isInTemplate() {\n      return this.currentTagName === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n  }, {\n    key: \"_updateCurrentElement\",\n    value: function _updateCurrentElement() {\n      this.current = this.items[this.stackTop];\n      this.currentTagName = this.current && this.treeAdapter.getTagName(this.current);\n      this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;\n    } //Mutations\n\n  }, {\n    key: \"push\",\n    value: function push(element) {\n      this.items[++this.stackTop] = element;\n\n      this._updateCurrentElement();\n\n      if (this._isInTemplate()) {\n        this.tmplCount++;\n      }\n    }\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      this.stackTop--;\n\n      if (this.tmplCount > 0 && this._isInTemplate()) {\n        this.tmplCount--;\n      }\n\n      this._updateCurrentElement();\n    }\n  }, {\n    key: \"replace\",\n    value: function replace(oldElement, newElement) {\n      var idx = this._indexOf(oldElement);\n\n      this.items[idx] = newElement;\n\n      if (idx === this.stackTop) {\n        this._updateCurrentElement();\n      }\n    }\n  }, {\n    key: \"insertAfter\",\n    value: function insertAfter(referenceElement, newElement) {\n      var insertionIdx = this._indexOf(referenceElement) + 1;\n      this.items.splice(insertionIdx, 0, newElement);\n\n      if (insertionIdx === ++this.stackTop) {\n        this._updateCurrentElement();\n      }\n    }\n  }, {\n    key: \"popUntilTagNamePopped\",\n    value: function popUntilTagNamePopped(tagName) {\n      while (this.stackTop > -1) {\n        var tn = this.currentTagName;\n        var ns = this.treeAdapter.getNamespaceURI(this.current);\n        this.pop();\n\n        if (tn === tagName && ns === NS.HTML) {\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"popUntilElementPopped\",\n    value: function popUntilElementPopped(element) {\n      while (this.stackTop > -1) {\n        var poppedElement = this.current;\n        this.pop();\n\n        if (poppedElement === element) {\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"popUntilNumberedHeaderPopped\",\n    value: function popUntilNumberedHeaderPopped() {\n      while (this.stackTop > -1) {\n        var tn = this.currentTagName;\n        var ns = this.treeAdapter.getNamespaceURI(this.current);\n        this.pop();\n\n        if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6 && ns === NS.HTML) {\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"popUntilTableCellPopped\",\n    value: function popUntilTableCellPopped() {\n      while (this.stackTop > -1) {\n        var tn = this.currentTagName;\n        var ns = this.treeAdapter.getNamespaceURI(this.current);\n        this.pop();\n\n        if (tn === $.TD || tn === $.TH && ns === NS.HTML) {\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"popAllUpToHtmlElement\",\n    value: function popAllUpToHtmlElement() {\n      //NOTE: here we assume that root <html> element is always first in the open element stack, so\n      //we perform this fast stack clean up.\n      this.stackTop = 0;\n\n      this._updateCurrentElement();\n    }\n  }, {\n    key: \"clearBackToTableContext\",\n    value: function clearBackToTableContext() {\n      while (this.currentTagName !== $.TABLE && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML || this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML) {\n        this.pop();\n      }\n    }\n  }, {\n    key: \"clearBackToTableBodyContext\",\n    value: function clearBackToTableBodyContext() {\n      while (this.currentTagName !== $.TBODY && this.currentTagName !== $.TFOOT && this.currentTagName !== $.THEAD && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML || this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML) {\n        this.pop();\n      }\n    }\n  }, {\n    key: \"clearBackToTableRowContext\",\n    value: function clearBackToTableRowContext() {\n      while (this.currentTagName !== $.TR && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML || this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML) {\n        this.pop();\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(element) {\n      for (var i = this.stackTop; i >= 0; i--) {\n        if (this.items[i] === element) {\n          this.items.splice(i, 1);\n          this.stackTop--;\n\n          this._updateCurrentElement();\n\n          break;\n        }\n      }\n    } //Search\n\n  }, {\n    key: \"tryPeekProperlyNestedBodyElement\",\n    value: function tryPeekProperlyNestedBodyElement() {\n      //Properly nested <body> element (should be second element in stack).\n      var element = this.items[1];\n      return element && this.treeAdapter.getTagName(element) === $.BODY ? element : null;\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(element) {\n      return this._indexOf(element) > -1;\n    }\n  }, {\n    key: \"getCommonAncestor\",\n    value: function getCommonAncestor(element) {\n      var elementIdx = this._indexOf(element);\n\n      return --elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n  }, {\n    key: \"isRootHtmlElementCurrent\",\n    value: function isRootHtmlElementCurrent() {\n      return this.stackTop === 0 && this.currentTagName === $.HTML;\n    } //Element in scope\n\n  }, {\n    key: \"hasInScope\",\n    value: function hasInScope(tagName) {\n      for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.treeAdapter.getTagName(this.items[i]);\n        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n        if (tn === tagName && ns === NS.HTML) {\n          return true;\n        }\n\n        if (isScopingElement(tn, ns)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"hasNumberedHeaderInScope\",\n    value: function hasNumberedHeaderInScope() {\n      for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.treeAdapter.getTagName(this.items[i]);\n        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n        if ((tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) && ns === NS.HTML) {\n          return true;\n        }\n\n        if (isScopingElement(tn, ns)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"hasInListItemScope\",\n    value: function hasInListItemScope(tagName) {\n      for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.treeAdapter.getTagName(this.items[i]);\n        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n        if (tn === tagName && ns === NS.HTML) {\n          return true;\n        }\n\n        if ((tn === $.UL || tn === $.OL) && ns === NS.HTML || isScopingElement(tn, ns)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"hasInButtonScope\",\n    value: function hasInButtonScope(tagName) {\n      for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.treeAdapter.getTagName(this.items[i]);\n        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n        if (tn === tagName && ns === NS.HTML) {\n          return true;\n        }\n\n        if (tn === $.BUTTON && ns === NS.HTML || isScopingElement(tn, ns)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"hasInTableScope\",\n    value: function hasInTableScope(tagName) {\n      for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.treeAdapter.getTagName(this.items[i]);\n        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n        if (ns !== NS.HTML) {\n          continue;\n        }\n\n        if (tn === tagName) {\n          return true;\n        }\n\n        if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"hasTableBodyContextInTableScope\",\n    value: function hasTableBodyContextInTableScope() {\n      for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.treeAdapter.getTagName(this.items[i]);\n        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n        if (ns !== NS.HTML) {\n          continue;\n        }\n\n        if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n          return true;\n        }\n\n        if (tn === $.TABLE || tn === $.HTML) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"hasInSelectScope\",\n    value: function hasInSelectScope(tagName) {\n      for (var i = this.stackTop; i >= 0; i--) {\n        var tn = this.treeAdapter.getTagName(this.items[i]);\n        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n        if (ns !== NS.HTML) {\n          continue;\n        }\n\n        if (tn === tagName) {\n          return true;\n        }\n\n        if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n          return false;\n        }\n      }\n\n      return true;\n    } //Implied end tags\n\n  }, {\n    key: \"generateImpliedEndTags\",\n    value: function generateImpliedEndTags() {\n      while (isImpliedEndTagRequired(this.currentTagName)) {\n        this.pop();\n      }\n    }\n  }, {\n    key: \"generateImpliedEndTagsThoroughly\",\n    value: function generateImpliedEndTagsThoroughly() {\n      while (isImpliedEndTagRequiredThoroughly(this.currentTagName)) {\n        this.pop();\n      }\n    }\n  }, {\n    key: \"generateImpliedEndTagsWithExclusion\",\n    value: function generateImpliedEndTagsWithExclusion(exclusionTagName) {\n      while (isImpliedEndTagRequired(this.currentTagName) && this.currentTagName !== exclusionTagName) {\n        this.pop();\n      }\n    }\n  }]);\n\n  return OpenElementStack;\n}();\n\nmodule.exports = OpenElementStack;","map":{"version":3,"names":["HTML","require","$","TAG_NAMES","NS","NAMESPACES","isImpliedEndTagRequired","tn","length","P","RB","RP","RT","DD","DT","LI","RTC","OPTION","OPTGROUP","isImpliedEndTagRequiredThoroughly","TD","TH","TR","TBODY","TFOOT","THEAD","CAPTION","COLGROUP","isScopingElement","ns","MI","MO","MN","MS","MATHML","DESC","SVG","TABLE","MTEXT","TITLE","APPLET","OBJECT","MARQUEE","TEMPLATE","FOREIGN_OBJECT","ANNOTATION_XML","OpenElementStack","document","treeAdapter","stackTop","items","current","currentTagName","currentTmplContent","tmplCount","element","idx","i","getNamespaceURI","getTagName","_isInTemplate","getTemplateContent","_updateCurrentElement","oldElement","newElement","_indexOf","referenceElement","insertionIdx","splice","tagName","pop","poppedElement","H1","H2","H3","H4","H5","H6","BODY","elementIdx","UL","OL","BUTTON","exclusionTagName","module","exports"],"sources":["D:/web/silly/silly/node_modules/parse5/lib/parser/open-element-stack.js"],"sourcesContent":["'use strict';\n\nconst HTML = require('../common/html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\nconst NS = HTML.NAMESPACES;\n\n//Element utils\n\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\nfunction isImpliedEndTagRequired(tn) {\n    switch (tn.length) {\n        case 1:\n            return tn === $.P;\n\n        case 2:\n            return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI;\n\n        case 3:\n            return tn === $.RTC;\n\n        case 6:\n            return tn === $.OPTION;\n\n        case 8:\n            return tn === $.OPTGROUP;\n    }\n\n    return false;\n}\n\nfunction isImpliedEndTagRequiredThoroughly(tn) {\n    switch (tn.length) {\n        case 1:\n            return tn === $.P;\n\n        case 2:\n            return (\n                tn === $.RB ||\n                tn === $.RP ||\n                tn === $.RT ||\n                tn === $.DD ||\n                tn === $.DT ||\n                tn === $.LI ||\n                tn === $.TD ||\n                tn === $.TH ||\n                tn === $.TR\n            );\n\n        case 3:\n            return tn === $.RTC;\n\n        case 5:\n            return tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD;\n\n        case 6:\n            return tn === $.OPTION;\n\n        case 7:\n            return tn === $.CAPTION;\n\n        case 8:\n            return tn === $.OPTGROUP || tn === $.COLGROUP;\n    }\n\n    return false;\n}\n\nfunction isScopingElement(tn, ns) {\n    switch (tn.length) {\n        case 2:\n            if (tn === $.TD || tn === $.TH) {\n                return ns === NS.HTML;\n            } else if (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS) {\n                return ns === NS.MATHML;\n            }\n\n            break;\n\n        case 4:\n            if (tn === $.HTML) {\n                return ns === NS.HTML;\n            } else if (tn === $.DESC) {\n                return ns === NS.SVG;\n            }\n\n            break;\n\n        case 5:\n            if (tn === $.TABLE) {\n                return ns === NS.HTML;\n            } else if (tn === $.MTEXT) {\n                return ns === NS.MATHML;\n            } else if (tn === $.TITLE) {\n                return ns === NS.SVG;\n            }\n\n            break;\n\n        case 6:\n            return (tn === $.APPLET || tn === $.OBJECT) && ns === NS.HTML;\n\n        case 7:\n            return (tn === $.CAPTION || tn === $.MARQUEE) && ns === NS.HTML;\n\n        case 8:\n            return tn === $.TEMPLATE && ns === NS.HTML;\n\n        case 13:\n            return tn === $.FOREIGN_OBJECT && ns === NS.SVG;\n\n        case 14:\n            return tn === $.ANNOTATION_XML && ns === NS.MATHML;\n    }\n\n    return false;\n}\n\n//Stack of open elements\nclass OpenElementStack {\n    constructor(document, treeAdapter) {\n        this.stackTop = -1;\n        this.items = [];\n        this.current = document;\n        this.currentTagName = null;\n        this.currentTmplContent = null;\n        this.tmplCount = 0;\n        this.treeAdapter = treeAdapter;\n    }\n\n    //Index of element\n    _indexOf(element) {\n        let idx = -1;\n\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.items[i] === element) {\n                idx = i;\n                break;\n            }\n        }\n        return idx;\n    }\n\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagName === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagName = this.current && this.treeAdapter.getTagName(this.current);\n\n        this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;\n    }\n\n    //Mutations\n    push(element) {\n        this.items[++this.stackTop] = element;\n        this._updateCurrentElement();\n\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n    }\n\n    pop() {\n        this.stackTop--;\n\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n\n        this._updateCurrentElement();\n    }\n\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n\n        this.items[idx] = newElement;\n\n        if (idx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n    }\n\n    insertAfter(referenceElement, newElement) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n\n        this.items.splice(insertionIdx, 0, newElement);\n\n        if (insertionIdx === ++this.stackTop) {\n            this._updateCurrentElement();\n        }\n    }\n\n    popUntilTagNamePopped(tagName) {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (tn === tagName && ns === NS.HTML) {\n                break;\n            }\n        }\n    }\n\n    popUntilElementPopped(element) {\n        while (this.stackTop > -1) {\n            const poppedElement = this.current;\n\n            this.pop();\n\n            if (poppedElement === element) {\n                break;\n            }\n        }\n    }\n\n    popUntilNumberedHeaderPopped() {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (\n                tn === $.H1 ||\n                tn === $.H2 ||\n                tn === $.H3 ||\n                tn === $.H4 ||\n                tn === $.H5 ||\n                (tn === $.H6 && ns === NS.HTML)\n            ) {\n                break;\n            }\n        }\n    }\n\n    popUntilTableCellPopped() {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (tn === $.TD || (tn === $.TH && ns === NS.HTML)) {\n                break;\n            }\n        }\n    }\n\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.stackTop = 0;\n        this._updateCurrentElement();\n    }\n\n    clearBackToTableContext() {\n        while (\n            (this.currentTagName !== $.TABLE && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    clearBackToTableBodyContext() {\n        while (\n            (this.currentTagName !== $.TBODY &&\n                this.currentTagName !== $.TFOOT &&\n                this.currentTagName !== $.THEAD &&\n                this.currentTagName !== $.TEMPLATE &&\n                this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    clearBackToTableRowContext() {\n        while (\n            (this.currentTagName !== $.TR && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    remove(element) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.items[i] === element) {\n                this.items.splice(i, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                break;\n            }\n        }\n    }\n\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        const element = this.items[1];\n\n        return element && this.treeAdapter.getTagName(element) === $.BODY ? element : null;\n    }\n\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n\n    getCommonAncestor(element) {\n        let elementIdx = this._indexOf(element);\n\n        return --elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.currentTagName === $.HTML;\n    }\n\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if (isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (\n                (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) &&\n                ns === NS.HTML\n            ) {\n                return true;\n            }\n\n            if (isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if ((tn === $.BUTTON && ns === NS.HTML) || isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === tagName) {\n                return true;\n            }\n\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === tagName) {\n                return true;\n            }\n\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (isImpliedEndTagRequired(this.currentTagName)) {\n            this.pop();\n        }\n    }\n\n    generateImpliedEndTagsThoroughly() {\n        while (isImpliedEndTagRequiredThoroughly(this.currentTagName)) {\n            this.pop();\n        }\n    }\n\n    generateImpliedEndTagsWithExclusion(exclusionTagName) {\n        while (isImpliedEndTagRequired(this.currentTagName) && this.currentTagName !== exclusionTagName) {\n            this.pop();\n        }\n    }\n}\n\nmodule.exports = OpenElementStack;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}